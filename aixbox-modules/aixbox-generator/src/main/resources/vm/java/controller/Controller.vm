package ${packageName}.controller.admin;


import com.aixbox.common.core.pojo.CommonResult;
import com.aixbox.common.core.pojo.PageResult;
import com.aixbox.common.core.utils.object.BeanUtils;
import ${packageName}.domain.entity.${ClassName};
import ${packageName}.domain.vo.request.${ClassName}PageReqVO;
import ${packageName}.domain.vo.request.${ClassName}SaveReqVO;
import ${packageName}.domain.vo.request.${ClassName}UpdateReqVO;
import ${packageName}.domain.vo.response.${ClassName}RespVO;
import ${packageName}.service.${ClassName}Service;
import jakarta.validation.Valid;
import jakarta.validation.constraints.NotEmpty;
import jakarta.validation.constraints.NotNull;
import lombok.RequiredArgsConstructor;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import java.util.Arrays;

import static com.aixbox.common.core.pojo.CommonResult.success;

/**
 * ${functionName} Controller
 */
@RequiredArgsConstructor
@RestController
@RequestMapping("/${moduleName}/${businessName}")
public class ${ClassName}Controller {

    private final ${ClassName}Service ${className}Service;

    /**
     * 新增${functionName}
     * @param addReqVO 新增参数
     * @return 新增数据id
     */
    @PostMapping("/add")
    public CommonResult<Long> add(@Valid @RequestBody ${ClassName}SaveReqVO addReqVO) {
        Long ${className}Id = ${className}Service.add${ClassName}(addReqVO);
        return success(${className}Id);
    }

    /**
     * 修改${functionName}
     * @param updateReqVO 修改参数
     * @return 是否成功
     */
    @PutMapping("/update")
    public CommonResult<Boolean> edit(@Valid @RequestBody ${ClassName}UpdateReqVO updateReqVO) {
        Boolean result = ${className}Service.update${ClassName}(updateReqVO);
        return success(result);
    }

    /**
     * 删除${functionName}
     * @param ids 删除id数组
     * @return 是否成功
     */
    @DeleteMapping("/{ids}")
    public CommonResult<Boolean> remove(@NotEmpty(message = "主键不能为空")
                                     @PathVariable Long[] ids) {
        Boolean result = ${className}Service.delete${ClassName}(Arrays.asList(ids));
        return success(result);
    }

    /**
     * 获取${functionName}详细信息
     * @param id 数据id
     * @return ${functionName}对象
     */
    @GetMapping("/{id}")
    public CommonResult<${ClassName}RespVO> get${ClassName}(@NotNull(message = "主键不能为空")
                                                    @PathVariable("id") Long id) {
        ${ClassName} ${className} = ${className}Service.get${ClassName}(id);
        return success(BeanUtils.toBean(${className}, ${ClassName}RespVO.class));
    }

    /**
     * 分页查询demo
     * @param pageReqVO 分页参数
     * @return ${functionName}分页对象
     */
    @GetMapping("/page")
    public CommonResult<PageResult<${ClassName}RespVO>> get${ClassName}Page(@Valid ${ClassName}PageReqVO pageReqVO) {
        PageResult<${ClassName}> pageResult = ${className}Service.get${ClassName}Page(pageReqVO);
        return success(BeanUtils.toBean(pageResult, ${ClassName}RespVO.class));
    }



}
