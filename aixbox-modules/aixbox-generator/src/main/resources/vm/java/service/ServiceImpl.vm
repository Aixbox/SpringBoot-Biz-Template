package ${packageName}.service.impl;

import com.aixbox.common.core.pojo.PageResult;
import com.aixbox.common.core.utils.object.BeanUtils;
import com.aixbox.common.core.utils.object.MapstructUtils;
import ${packageName}.domain.entity.${ClassName};
import ${packageName}.domain.vo.request.${ClassName}PageReqVO;
import ${packageName}.domain.vo.request.${ClassName}SaveReqVO;
import ${packageName}.domain.vo.request.${ClassName}UpdateReqVO;
import ${packageName}.mapper.${ClassName}Mapper;
import ${packageName}.service.${ClassName}Service;
import lombok.RequiredArgsConstructor;
import org.springframework.stereotype.Service;

import java.util.List;

/**
* ${functionName} Service实现类
*/
@RequiredArgsConstructor
@Service
public class ${ClassName}ServiceImpl implements ${ClassName}Service {

    private final ${ClassName}Mapper ${className}Mapper;

    /**
     * 新增${functionName}
     * @param addReqVO 新增参数
     * @return 新增数据id
     */
    @Override
    public Long add${ClassName}(${ClassName}SaveReqVO addReqVO) {
        ${ClassName} ${className} = BeanUtils.toBean(addReqVO, ${ClassName}.class);
        ${className}Mapper.insert(${className});
        return ${className}.getId();
    }

    /**
     * 修改${functionName}
     * @param updateReqVO 修改参数
     * @return 是否成功
     */
    @Override
    public Boolean update${ClassName}(${ClassName}UpdateReqVO updateReqVO) {
        ${ClassName} ${className} = MapstructUtils.convert(updateReqVO, ${ClassName}.class);
        return ${className}Mapper.updateById(${className}) > 0;
    }

    /**
     * 删除${functionName}
     * @param ids 删除id数组
     * @return 是否成功
     */
    @Override
    public Boolean delete${ClassName}(List<Long> ids) {
        return ${className}Mapper.deleteByIds(ids) > 0;
    }

    /**
     * 获取${functionName}详细数据
     * @param id 数据id
     * @return ${functionName}对象
     */
    @Override
    public ${ClassName} get${ClassName}(Long id) {
        return ${className}Mapper.selectById(id);
    }

    /**
     * 分页查询${functionName}
     * @param pageReqVO 分页查询参数
     * @return ${functionName}分页对象
     */
    @Override
    public PageResult<${ClassName}> get${ClassName}Page(${ClassName}PageReqVO pageReqVO) {
        return ${className}Mapper.selectPage(pageReqVO);
    }
}




