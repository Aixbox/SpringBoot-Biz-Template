<script setup lang="ts">
import type { VbenFormProps } from '@vben/common-ui';

import type { VxeGridProps } from '#/adapter/vxe-table';
import type { ${ClassName} } from '#/api/${moduleName}/${businessName}/model';

#if($popupComponent == "drawer")
import { Page, useVbenDrawer } from '@vben/common-ui';
#else
import { Page, useVbenModal } from '@vben/common-ui';
#end
import { getVxePopupContainer } from '@vben/utils';

import {
  Modal,
  Popconfirm,
  #foreach($column in $columns)
    #if($column.list && $column.htmlType == "imageUpload")
  Image,
  Spin,
    #end
  #end
  Space } from 'ant-design-vue';

import { useVbenVxeGrid, vxeCheckboxChecked } from '#/adapter/vxe-table';
import {
  ${businessName}Export,
  ${businessName}List,
  ${businessName}Remove,
} from '#/api/${moduleName}/${businessName}';
import { commonDownloadExcel } from '#/utils/file/download';

import {
  columns,
  #foreach($column in $columns)
    #if($column.list && $column.htmlType == "imageUpload")
  fallbackImageBase64,
    #end
  #end
  querySchema } from './data';
#if($popupComponent == "drawer")
import ${businessName}Drawer from './${businessName}-drawer.vue';
#else
import ${businessName}Modal from './${businessName}-modal.vue';
#end

const formOptions: VbenFormProps = {
  commonConfig: {
    labelWidth: 80,
    componentProps: {
      allowClear: true,
    },
  },
  schema: querySchema(),
  wrapperClass: 'grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4',
  // 日期选择格式化
  fieldMappingTime: [
  #foreach ($column in $columns)
    #if($column.htmlType == "datetime" && $column.queryType == "BETWEEN" && ${column.javaField}
    == "LocalDateTime")
      [
        '$column.javaField',
        ['$column.javaField[0]', '$column.javaField[1]'],
        ['YYYY-MM-DD', 'YYYY-MM-DD'],
      ],
    #elseif ($column.htmlType == "datetime" && $column.queryType == "BETWEEN" && ${column.javaField}
    == "LocalDate")
      [
        '$column.javaField',
        ['$column.javaField[0]', '$column.javaField[1]'],
        ['YYYY-MM-DD 00:00:00', 'YYYY-MM-DD 23:59:59'],
      ],
    #end
  #end
  ],
};

const gridOptions: VxeGridProps = {
  checkboxConfig: {
    // 高亮
    highlight: true,
    // 翻页时保留选中状态
    reserve: true,
  },
  columns,
  height: 'auto',
  keepSource: true,
  pagerConfig: {},
  proxyConfig: {
    ajax: {
      query: async ({ page }, formValues = {}) => {
        return await ${businessName}List({
          pageNo: page.currentPage,
          pageSize: page.pageSize,
          ...formValues,
        });
      },
    },
  },
  rowConfig: {
    keyField: '${pkColumn.javaField}',
  },
  id: '${moduleName}-${businessName}-index',
};

const [BasicTable, tableApi] = useVbenVxeGrid({
  formOptions,
  gridOptions,
});

#if($popupComponent == "drawer")
const [${BusinessName}Drawer, drawerApi] = useVbenDrawer({
  connectedComponent: ${businessName}Drawer,
});

function handleAdd() {
  drawerApi.setData({});
  drawerApi.open();
}

async function handleEdit(record: ${ClassName}) {
  drawerApi.setData({ id: record.${pkColumn.javaField} });
  drawerApi.open();
}
#else
const [${BusinessName}Modal, modalApi] = useVbenModal({
  connectedComponent: ${businessName}Modal,
});

function handleAdd() {
  modalApi.setData({});
  modalApi.open();
}

async function handleEdit(record: ${ClassName}) {
  modalApi.setData({ id: record.${pkColumn.javaField} });
  modalApi.open();
}
#end

async function handleDelete(row: ${ClassName}) {
  await ${businessName}Remove([row.${pkColumn.javaField}]);
  await tableApi.query();
}

function handleMultiDelete() {
  const rows = tableApi.grid.getCheckboxRecords();
  const ${pkColumn.javaField}s = rows.map((row: ${ClassName}) => row.${pkColumn.javaField});
  Modal.confirm({
    title: '提示',
    okType: 'danger',
    content: `确认删除选中的${ids.length}条记录吗？`,
    onOk: async () => {
      await ${businessName}Remove(${pkColumn.javaField}s);
      await tableApi.query();
    },
  });
}

function handleDownloadExcel() {
  commonDownloadExcel(${businessName}Export, '${functionName}', tableApi.formApi.form.values, {
    fieldMappingTime: formOptions.fieldMappingTime,
  });
}
</script>

<template>
  <Page :auto-content-height="true">
    <BasicTable table-title="参数列表">
      <template #toolbar-tools>
        <Space>
          <a-button
            v-access:code="['${moduleName}:${businessName}:export']"
            @click="handleDownloadExcel"
          >
            {{ #[[$t]]#('pages.common.export') }}
          </a-button>
          <a-button
            :disabled="!vxeCheckboxChecked(tableApi)"
            danger
            type="primary"
            v-access:code="['${moduleName}:${businessName}:remove']"
            @click="handleMultiDelete"
          >
            {{ #[[$t]]#('pages.common.delete') }}
          </a-button>
          <a-button
            type="primary"
            v-access:code="['${moduleName}:${businessName}:add']"
            @click="handleAdd"
          >
            {{ #[[$t]]#('pages.common.add') }}
          </a-button>
        </Space>
      </template>
      #foreach($column in $columns)
      #set($javaField=$column.javaField)
      #set($parentheseIndex=$column.columnComment.indexOf("（"))
      #if($parentheseIndex != -1)
      #set($comment=$column.columnComment.substring(0, $parentheseIndex))
      #else
      #set($comment=$column.columnComment)
      #end
      #if($column.list && $column.htmlType == "imageUpload")
      <template #url="{ row }">
        <Image
          :key="row.id"
          :src="row.${javaField}"
          height="50px"
          :fallback="fallbackImageBase64"
        >
          <template #placeholder>
            <div class="flex size-full items-center justify-center">
              <Spin />
            </div>
          </template>
        </Image>
      </template>
      #end
      #end
      <template #action="{ row }">
        <Space>
          <ghost-button
            v-access:code="['${moduleName}:${businessName}:edit']"
            @click.stop="handleEdit(row)"
          >
            {{ #[[$t]]#('pages.common.edit') }}
          </ghost-button>
          <Popconfirm
            :get-popup-container="getVxePopupContainer"
            placement="left"
            title="确认删除？"
            @confirm="handleDelete(row)"
          >
            <ghost-button
              danger
              v-access:code="['${moduleName}:${businessName}:remove']"
              @click.stop=""
            >
              {{ #[[$t]]#('pages.common.delete') }}
            </ghost-button>
          </Popconfirm>
        </Space>
      </template>
    </BasicTable>
    #if($popupComponent == "drawer")
    <${BusinessName}Drawer @reload="tableApi.query()" />
    #else
    <${BusinessName}Modal @reload="tableApi.query()" />
    #end
  </Page>
</template>
